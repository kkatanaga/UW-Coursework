package codesKK280;

import java.io.FileNotFoundException;

import org.jogamp.java3d.Transform3D;
import org.jogamp.java3d.TransformGroup;
import org.jogamp.java3d.loaders.IncorrectFormatException;
import org.jogamp.java3d.loaders.ParsingErrorException;
import org.jogamp.java3d.loaders.Scene;
import org.jogamp.java3d.loaders.objectfile.ObjectFile;
import org.jogamp.vecmath.Vector3f;

public class RingObjectsKK {
	class Ring1Shape {														// loads Ring1.obj
		private TransformGroup objTG;                          				// use 'objTG' to position an object
		
		public Ring1Shape() {
			Scene s = null;
			int flags = ObjectFile.RESIZE | ObjectFile.TRIANGULATE | ObjectFile.STRIPIFY;
			ObjectFile f = new ObjectFile(flags, (float) (60 * Math.PI / 180.0));
			String directory = "src/codesKK280/objects/Ring1.obj";			// default directory starting from the Comp2800KK
			try {
				s = f.load(directory);
			} catch (FileNotFoundException e) {
				System.err.println(e);
				System.exit(1);
			} catch (ParsingErrorException e) {
				System.err.println(e);
				System.exit(1);
			} catch (IncorrectFormatException e) {
				System.err.println(e);
				System.exit(1);
			}
			Transform3D scaler = new Transform3D();
			scaler.setScale(1.0f);
			objTG = new TransformGroup(scaler);
			objTG.addChild(s.getSceneGroup());
		}
		public TransformGroup position_Object() {
			return objTG;
		}
	}

	class Ring2Shape {														// loads Ring2.obj
		private TransformGroup objTG;                          				// use 'objTG' to position an object
		
		public Ring2Shape() {
			Scene s = null;
			int flags = ObjectFile.RESIZE | ObjectFile.TRIANGULATE | ObjectFile.STRIPIFY;
			ObjectFile f = new ObjectFile(flags, (float) (60 * Math.PI / 180.0));
			String directory = "src/codesKK280/objects/Ring2.obj";			// default directory starting from the Comp2800KK
			try {
				s = f.load(directory);
			} catch (FileNotFoundException e) {
				System.err.println(e);
				System.exit(1);
			} catch (ParsingErrorException e) {
				System.err.println(e);
				System.exit(1);
			} catch (IncorrectFormatException e) {
				System.err.println(e);
				System.exit(1);
			}
			Transform3D scaler = new Transform3D();
			scaler.setScale(0.8f);
			Transform3D trfm = new Transform3D();
			trfm.setTranslation(new Vector3f(0f, 0.07f, 0f));
			trfm.mul(scaler);
			objTG = new TransformGroup(trfm);
			objTG.addChild(s.getSceneGroup());
		}
		public TransformGroup position_Object() {
			return objTG;
		}
	}

	class Ring3Shape {														// loads Ring3.obj
		private TransformGroup objTG;                          				// use 'objTG' to position an object
		
		public Ring3Shape() {
			Scene s = null;
			int flags = ObjectFile.RESIZE | ObjectFile.TRIANGULATE | ObjectFile.STRIPIFY;
			ObjectFile f = new ObjectFile(flags, (float) (60 * Math.PI / 180.0));
			String directory = "src/codesKK280/objects/Ring3.obj";			// default directory starting from the Comp2800KK
			try {
				s = f.load(directory);
			} catch (FileNotFoundException e) {
				System.err.println(e);
				System.exit(1);
			} catch (ParsingErrorException e) {
				System.err.println(e);
				System.exit(1);
			} catch (IncorrectFormatException e) {
				System.err.println(e);
				System.exit(1);
			}
			Transform3D scaler = new Transform3D();
			scaler.setScale(0.7f);
			objTG = new TransformGroup(scaler);
			objTG.addChild(s.getSceneGroup());
		}
		public TransformGroup position_Object() {
			return objTG;
		}
	}

	class Ring4Shape {														// loads Ring4.obj
		private TransformGroup objTG;                          				// use 'objTG' to position an object
		
		public Ring4Shape() {
			Scene s = null;
			int flags = ObjectFile.RESIZE | ObjectFile.TRIANGULATE | ObjectFile.STRIPIFY;
			ObjectFile f = new ObjectFile(flags, (float) (60 * Math.PI / 180.0));
			String directory = "src/codesKK280/objects/Ring4.obj";			// default directory starting from the Comp2800KK
			try {
				s = f.load(directory);
			} catch (FileNotFoundException e) {
				System.err.println(e);
				System.exit(1);
			} catch (ParsingErrorException e) {
				System.err.println(e);
				System.exit(1);
			} catch (IncorrectFormatException e) {
				System.err.println(e);
				System.exit(1);
			}
			Transform3D scaler = new Transform3D();
			scaler.setScale(0.6f);
			objTG = new TransformGroup(scaler);
			objTG.addChild(s.getSceneGroup());
		}
		public TransformGroup position_Object() {
			return objTG;
		}
	}
}
